apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  name: gpu-simple-8-step-workflow
  namespace: tekton-pipelines
  labels:
    app.kubernetes.io/name: gpu-simple-8-step-workflow
    app.kubernetes.io/component: tekton-pipeline
    workflow-type: "simplified-complete"
    gpu-enabled: "true"
spec:
  pipelineSpec:
    description: |
      Simplified 8-step GPU-enabled single-cell analysis workflow.
      
      This workflow demonstrates:
      - Git repository cloning and validation
      - Sequential notebook execution with dependency management
      - GPU environment setup and notebook execution
      - Results validation and cleanup
      
      Steps:
      1. Git Clone and Environment Setup
      2. Data Preprocessing (notebook 01)
      3. Extended Analysis (notebook 02)
      4. Pearson Residuals Analysis (notebook 03)
      5. Dask Out-of-Core Analysis (notebook 04)
      6. Multi-GPU Analysis (notebook 05)
      7. Brain Analysis (notebook 06)
      8. Results Validation and Summary
    
    workspaces:
    - name: shared-storage
      description: Shared workspace for notebooks and outputs
    
    tasks:
    # Step 1: Git Clone and Environment Setup
    - name: step1-git-clone-setup
      taskSpec:
        workspaces:
        - name: output
        steps:
        - name: clone-and-setup
          image: nvcr.io/nvidia/rapidsai/notebooks:25.04-cuda12.8-py3.12
          script: |
            #!/bin/bash
            set -eu
            
            echo "üöÄ Step 1: Git Clone and Environment Setup"
            
            # Install git
            apt-get update -qq && apt-get install -y -qq git
            
            cd $(workspaces.output.path)
            
            # Completely clean workspace
            find . -mindepth 1 -delete 2>/dev/null || true
            
            # Clone correct repository and branch
            git clone --branch johnnynv-patch-dev "https://github.com/bp-cicd-org/single-cell-analysis-blueprint.git"
            
            echo "‚úÖ Repository cloned successfully"
            
            # Create artifacts directory
            mkdir -p artifacts
            
            # GPU validation
            echo "üîç GPU Environment Validation:"
            nvidia-smi --query-gpu=name,memory.total --format=csv,noheader,nounits || echo "Warning: nvidia-smi failed"
            python -c 'import cupy as cp; print("GPU count:", cp.cuda.runtime.getDeviceCount())' || echo "Warning: GPU test failed"
            
            echo "‚úÖ Step 1 completed successfully"
      workspaces:
      - name: output
        workspace: shared-storage
    
    # Step 2: Data Preprocessing (notebook 01)
    - name: step2-data-preprocessing
      taskRef:
        name: gpu-papermill-production-init-rmm-fixed
      runAfter: ["step1-git-clone-setup"]
      workspaces:
      - name: shared-storage
        workspace: shared-storage
      params:
      - name: notebook-relative-dir
        value: "single-cell-analysis-blueprint/notebooks"
      - name: notebook-filename
        value: "01_scRNA_analysis_preprocessing.ipynb"
      - name: output-notebook
        value: "step2_preprocessing_output.ipynb"
      - name: container-image
        value: "nvcr.io/nvidia/rapidsai/notebooks:25.04-cuda12.8-py3.12"
    
    # Step 3: Extended Analysis (notebook 02)
    - name: step3-extended-analysis
      taskRef:
        name: gpu-papermill-production-init-rmm-fixed
      runAfter: ["step2-data-preprocessing"]
      workspaces:
      - name: shared-storage
        workspace: shared-storage
      params:
      - name: notebook-relative-dir
        value: "single-cell-analysis-blueprint/notebooks"
      - name: notebook-filename
        value: "02_scRNA_analysis_extended.ipynb"
      - name: output-notebook
        value: "step3_extended_analysis_output.ipynb"
      - name: container-image
        value: "nvcr.io/nvidia/rapidsai/notebooks:25.04-cuda12.8-py3.12"
    
    # Step 4: Pearson Residuals Analysis (notebook 03)
    - name: step4-pearson-analysis
      taskRef:
        name: gpu-papermill-production-init-rmm-fixed
      runAfter: ["step3-extended-analysis"]
      workspaces:
      - name: shared-storage
        workspace: shared-storage
      params:
      - name: notebook-relative-dir
        value: "single-cell-analysis-blueprint/notebooks"
      - name: notebook-filename
        value: "03_scRNA_analysis_with_pearson_residuals.ipynb"
      - name: output-notebook
        value: "step4_pearson_analysis_output.ipynb"
      - name: container-image
        value: "nvcr.io/nvidia/rapidsai/notebooks:25.04-cuda12.8-py3.12"
    
    # Step 5: Dask Out-of-Core Analysis (notebook 04)
    - name: step5-dask-analysis
      taskRef:
        name: gpu-papermill-production-init-rmm-fixed
      runAfter: ["step4-pearson-analysis"]
      workspaces:
      - name: shared-storage
        workspace: shared-storage
      params:
      - name: notebook-relative-dir
        value: "single-cell-analysis-blueprint/notebooks"
      - name: notebook-filename
        value: "04_scRNA_analysis_dask_out_of_core.ipynb"
      - name: output-notebook
        value: "step5_dask_analysis_output.ipynb"
      - name: container-image
        value: "nvcr.io/nvidia/rapidsai/notebooks:25.04-cuda12.8-py3.12"
    
    # Step 6: Multi-GPU Analysis (notebook 05)
    - name: step6-multi-gpu-analysis
      taskRef:
        name: gpu-papermill-production-init-rmm-fixed
      runAfter: ["step5-dask-analysis"]
      workspaces:
      - name: shared-storage
        workspace: shared-storage
      params:
      - name: notebook-relative-dir
        value: "single-cell-analysis-blueprint/notebooks"
      - name: notebook-filename
        value: "05_scRNA_analysis_multi_GPU.ipynb"
      - name: output-notebook
        value: "step6_multi_gpu_analysis_output.ipynb"
      - name: container-image
        value: "nvcr.io/nvidia/rapidsai/notebooks:25.04-cuda12.8-py3.12"
    
    # Step 7: Brain Analysis (notebook 06)
    - name: step7-brain-analysis
      taskRef:
        name: gpu-papermill-production-init-rmm-fixed
      runAfter: ["step6-multi-gpu-analysis"]
      workspaces:
      - name: shared-storage
        workspace: shared-storage
      params:
      - name: notebook-relative-dir
        value: "single-cell-analysis-blueprint/notebooks"
      - name: notebook-filename
        value: "06_scRNA_analysis_90k_brain_example.ipynb"
      - name: output-notebook
        value: "step7_brain_analysis_output.ipynb"
      - name: container-image
        value: "nvcr.io/nvidia/rapidsai/notebooks:25.04-cuda12.8-py3.12"
    
    # Step 8: Results Validation and Summary
    - name: step8-validation-summary
      taskSpec:
        workspaces:
        - name: shared-storage
        params:
        - name: validation-notebooks
          description: Comma-separated list of output notebooks to validate
          type: string
        steps:
        - name: validate-and-summarize
          image: python:3.11-slim
          script: |
            #!/bin/bash
            set -eu
            
            echo "üöÄ Step 8: Results Validation and Summary"
            echo "========================================="
            
            SHARED_DIR="$(workspaces.shared-storage.path)"
            ARTIFACTS_DIR="$SHARED_DIR/artifacts"
            
            cd "$SHARED_DIR"
            
            echo "üìÅ Current workspace contents:"
            ls -la
            
            echo ""
            echo "üìä Artifacts directory:"
            if [ -d "$ARTIFACTS_DIR" ]; then
              ls -la "$ARTIFACTS_DIR"
              
              # Count successful outputs
              NOTEBOOK_COUNT=$(find "$ARTIFACTS_DIR" -name "*.ipynb" | wc -l)
              echo "üìì Total notebooks generated: $NOTEBOOK_COUNT"
              
              # Check file sizes
              echo ""
              echo "üìä Notebook file sizes:"
              find "$ARTIFACTS_DIR" -name "*.ipynb" -exec du -h {} \; | sort -hr
              
            else
              echo "‚ùå No artifacts directory found"
            fi
            
            echo ""
            echo "üíæ Workspace disk usage:"
            du -h . | sort -hr | head -10
            
            echo ""
            echo "üéâ 8-STEP WORKFLOW VALIDATION COMPLETED!"
            echo "‚úÖ All workflow steps executed successfully"
            
      runAfter: ["step7-brain-analysis"]
      params:
      - name: validation-notebooks
        value: "step2_preprocessing_output.ipynb,step3_extended_analysis_output.ipynb,step4_pearson_analysis_output.ipynb,step5_dask_analysis_output.ipynb,step6_multi_gpu_analysis_output.ipynb,step7_brain_analysis_output.ipynb"
      workspaces:
      - name: shared-storage
        workspace: shared-storage
  
  workspaces:
  - name: shared-storage
    persistentVolumeClaim:
      claimName: source-code-workspace
  
  taskRunTemplate:
    serviceAccountName: tekton-pipeline-service
    podTemplate:
      securityContext:
        fsGroup: 1001  # rapids group
      nodeSelector:
        accelerator: nvidia-tesla-gpu
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
  
  timeouts:
    pipeline: "180m"  # 3 hours for complete workflow
    tasks: "45m"      # 45 minutes per task 