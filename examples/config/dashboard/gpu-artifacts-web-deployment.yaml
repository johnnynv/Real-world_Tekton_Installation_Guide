apiVersion: apps/v1
kind: Deployment
metadata:
  name: gpu-artifacts-web
  namespace: tekton-pipelines
  labels:
    app: gpu-artifacts-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gpu-artifacts-web
  template:
    metadata:
      labels:
        app: gpu-artifacts-web
    spec:
      containers:
      - name: nginx
        image: nginx:1.21-alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: shared-storage
          mountPath: /var/www/html
          readOnly: true
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: shared-storage
        persistentVolumeClaim:
          claimName: source-code-workspace
      - name: nginx-config
        configMap:
          name: nginx-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: tekton-pipelines
data:
  default.conf: |
    server {
        listen 80;
        server_name _;
        root /var/www/html;
        index index.html;
        
        location / {
            try_files $uri $uri/ =404;
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
        }
        
        location /pipeline-runs/ {
            alias /var/www/html/pipeline-runs/;
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
        }
        
        # Enable CORS for API calls
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
    }
---
apiVersion: v1
kind: Service
metadata:
  name: gpu-artifacts-web-service
  namespace: tekton-pipelines
  labels:
    app: gpu-artifacts-web
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30080
    protocol: TCP
  selector:
    app: gpu-artifacts-web
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gpu-artifacts-ingress
  namespace: tekton-pipelines
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - host: artifacts.10.34.2.129.nip.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: gpu-artifacts-web-service
            port:
              number: 80