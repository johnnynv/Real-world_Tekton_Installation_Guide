apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  name: gpu-complete-8-step-workflow
  namespace: tekton-pipelines
  labels:
    app.kubernetes.io/name: gpu-complete-8-step-workflow
    app.kubernetes.io/component: tekton-pipeline
    workflow-type: "production-complete"
    gpu-enabled: "true"
spec:
  pipelineSpec:
    description: |
      Complete 8-step GPU-enabled single-cell analysis workflow for production environments.
      
      This workflow demonstrates:
      - Large dataset download and preparation
      - GPU environment setup with init containers
      - Multi-notebook execution with dependency management
      - Memory optimization and error handling
      - Results validation and cleanup
      
      Steps:
      1. Large Dataset Download and Preparation
      2. GPU Environment Initialization and Validation
      3. Data Preprocessing (notebook 01)
      4. Extended Analysis (notebook 02)
      5. Pearson Residuals Analysis (notebook 03)
      6. Dask Out-of-Core Analysis (notebook 04)
      7. Multi-GPU Analysis (notebook 05)
      8. Results Validation and Cleanup
    
    workspaces:
    - name: shared-storage
      description: Shared workspace for datasets, notebooks, and outputs
    - name: large-dataset-cache
      description: Dedicated workspace for large dataset caching
    
    tasks:
    # Step 1: Large Dataset Download and Preparation
    - name: step1-dataset-download
      taskRef:
        name: large-dataset-download-task
      workspaces:
      - name: shared-storage
        workspace: shared-storage
      - name: dataset-cache
        workspace: large-dataset-cache
      params:
      - name: dataset-urls
        value: |
          https://cf.10xgenomics.com/samples/cell-exp/1.1.0/pbmc3k/pbmc3k_filtered_gene_bc_matrices.tar.gz
          https://cf.10xgenomics.com/samples/cell-exp/3.0.0/pbmc_1k_v3/pbmc_1k_v3_filtered_feature_bc_matrix.tar.gz
      - name: dataset-names
        value: "pbmc3k,pbmc_1k_v3"
    
    # Step 2: Git Clone and GPU Environment Validation
    - name: step2-git-clone-and-gpu-validation
      taskSpec:
        workspaces:
        - name: output
        steps:
        - name: clone-and-validate
          image: nvcr.io/nvidia/rapidsai/notebooks:25.04-cuda12.8-py3.12
          script: |
            #!/bin/bash
            set -eu
            
            echo "üöÄ Step 2: Git Clone and GPU Environment Validation"
            cd $(workspaces.output.path)
            
            # Completely clean workspace
            find . -mindepth 1 -delete 2>/dev/null || true
            
            # Clone correct repository and branch
            git clone --branch johnnynv-patch-dev "https://github.com/bp-cicd-org/single-cell-analysis-blueprint.git"
            
            echo "‚úÖ Repository cloned successfully from johnnynv-patch-dev branch"
            
            # GPU validation
            echo "üîç GPU Environment Validation:"
            nvidia-smi --query-gpu=name,memory.total --format=csv,noheader,nounits || echo "Warning: nvidia-smi failed"
            python -c 'import cupy as cp; print("GPU count:", cp.cuda.runtime.getDeviceCount())' || echo "Warning: GPU test failed"
            
            echo "‚úÖ Step 2 completed successfully"
      runAfter: ["step1-dataset-download"]
      workspaces:
      - name: output
        workspace: shared-storage
    
    # Step 3: Data Preprocessing (notebook 01)
    - name: step3-data-preprocessing
      taskRef:
        name: gpu-papermill-production-init-rmm-fixed
      runAfter: ["step2-git-clone-and-gpu-validation"]
      workspaces:
      - name: shared-storage
        workspace: shared-storage
      params:
      - name: notebook-relative-dir
        value: "single-cell-analysis-blueprint/notebooks"
      - name: notebook-filename
        value: "01_scRNA_analysis_preprocessing.ipynb"
      - name: output-notebook
        value: "step3_preprocessing_output.ipynb"
      - name: container-image
        value: "nvcr.io/nvidia/rapidsai/notebooks:25.04-cuda12.8-py3.12"
    
    # Step 4: Extended Analysis (notebook 02)
    - name: step4-extended-analysis
      taskRef:
        name: gpu-papermill-production-init-rmm-fixed
      runAfter: ["step3-data-preprocessing"]
      workspaces:
      - name: shared-storage
        workspace: shared-storage
      params:
      - name: notebook-relative-dir
        value: "single-cell-analysis-blueprint/notebooks"
      - name: notebook-filename
        value: "02_scRNA_analysis_extended.ipynb"
      - name: output-notebook
        value: "step4_extended_analysis_output.ipynb"
      - name: container-image
        value: "nvcr.io/nvidia/rapidsai/notebooks:25.04-cuda12.8-py3.12"
    
    # Step 5: Pearson Residuals Analysis (notebook 03)
    - name: step5-pearson-analysis
      taskRef:
        name: gpu-papermill-production-init-rmm-fixed
      runAfter: ["step4-extended-analysis"]
      workspaces:
      - name: shared-storage
        workspace: shared-storage
      params:
      - name: notebook-relative-dir
        value: "single-cell-analysis-blueprint/notebooks"
      - name: notebook-filename
        value: "03_scRNA_analysis_with_pearson_residuals.ipynb"
      - name: output-notebook
        value: "step5_pearson_analysis_output.ipynb"
      - name: container-image
        value: "nvcr.io/nvidia/rapidsai/notebooks:25.04-cuda12.8-py3.12"
    
    # Step 6: Dask Out-of-Core Analysis (notebook 04)
    - name: step6-dask-analysis
      taskRef:
        name: gpu-papermill-production-init-rmm-fixed
      runAfter: ["step5-pearson-analysis"]
      workspaces:
      - name: shared-storage
        workspace: shared-storage
      params:
      - name: notebook-relative-dir
        value: "single-cell-analysis-blueprint/notebooks"
      - name: notebook-filename
        value: "04_scRNA_analysis_dask_out_of_core.ipynb"
      - name: output-notebook
        value: "step6_dask_analysis_output.ipynb"
      - name: container-image
        value: "nvcr.io/nvidia/rapidsai/notebooks:25.04-cuda12.8-py3.12"
    
    # Step 7: Multi-GPU Analysis (notebook 05)
    - name: step7-multi-gpu-analysis
      taskRef:
        name: gpu-papermill-production-init-rmm-fixed
      runAfter: ["step6-dask-analysis"]
      workspaces:
      - name: shared-storage
        workspace: shared-storage
      params:
      - name: notebook-relative-dir
        value: "single-cell-analysis-blueprint/notebooks"
      - name: notebook-filename
        value: "05_scRNA_analysis_multi_GPU.ipynb"
      - name: output-notebook
        value: "step7_multi_gpu_analysis_output.ipynb"
      - name: container-image
        value: "nvcr.io/nvidia/rapidsai/notebooks:25.04-cuda12.8-py3.12"
    
    # Step 8: Results Validation and Cleanup
    - name: step8-validation-cleanup
      taskRef:
        name: results-validation-cleanup-task
      runAfter: ["step7-multi-gpu-analysis"]
      workspaces:
      - name: shared-storage
        workspace: shared-storage
      - name: dataset-cache
        workspace: large-dataset-cache
      params:
      - name: validation-notebooks
        value: "step3_preprocessing_output.ipynb,step4_extended_analysis_output.ipynb,step5_pearson_analysis_output.ipynb,step6_dask_analysis_output.ipynb,step7_multi_gpu_analysis_output.ipynb"
  
  workspaces:
  - name: shared-storage
    persistentVolumeClaim:
      claimName: source-code-workspace
  - name: large-dataset-cache
    persistentVolumeClaim:
      claimName: large-dataset-cache-pvc
  
  taskRunTemplate:
    serviceAccountName: tekton-pipeline-service
    podTemplate:
      securityContext:
        fsGroup: 1001  # rapids group
      nodeSelector:
        accelerator: nvidia-tesla-gpu
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
  
  timeouts:
    pipeline: "120m"  # 2 hours for complete workflow
    tasks: "30m"      # 30 minutes per task 